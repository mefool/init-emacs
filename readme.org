* TODO INIT EMACS - BASED ON SPARTAN EMACS
  Simpler base Emacs configuration framework

  A word for beginners:

  This Emacs configuration is a framework, not a starter kit. If you are new, welcome, and please begin by checking out `M-x help-with-tutorial`.
  The manuals may all be found at https://www.gnu.org/software/emacs/manual/

** TODO QUICK INSTALL

   #+BEGIN_SRC bash
     git clone https://github.com/mefool/init-emacs
   #+END_SRC

*** TODO FEATURES

    - KISS, clean configuration and a comprehensible layers system
    - No third party packages install by default - prefers built-ins
    - Uses lightweight, mostly-vanilla configured layer packages
    - Tested on Linux, but should work also work fine on any gnu/bsd/macos base
    
*** LAYERS

    - Edit init.el and M-x init-reconfigure

**** TODO HOW LAYERS WORK

    - Enabled layer packages are installed during init
    - Then layer packages are configured in the after-init-hook
    - Finally layer packages may be user local customized in spartan.d/

      (all lisp files in spartan.d/ load last, during the emacs-startup-hook)

*** TODO MINIMAL LANGUAGE LAYERS PRECONFIGURED

NOTE: The idea here is to provde everywhere the get up and going configuration, this means  proper syntax formatting with an interactive repl for rapid development,
and intelligent auto-completion and find definition, etc. via eglot's minimal language server protocol implementation.

Debugging is provided within many of the languages itself, e.g. Python and Ruby have builtin debuggers. With C, one may use M-x `gdb' with 'gdb', etc.

With compiled languages, one might use <f5> and set the compile command to something instead of make if needed, etc.

    - Emacs Lisp (paredit, builtins)
    - Common Lisp (paredit, slime)
    - C / C++ (lsp)
    - Clojure, Clojurescript (paredit, lsp, inf-clojure)
    - Racket (paredit)
    - Scheme (paredit)
    - Bash  (shellcheck, lsp)
    - Python (lsp)
    - Ruby (lsp)
    - Rust (lsp)
    - Solidity (lsp)
    - Go (lsp)
    - Javascript / Typescript (lsp)
    - Extra cfg file formatting / syntax support: Terraform, Nix, Systemd, Nginx, JSON, YAML, XML

*** HOW TO HACK

    - Fork repo, clone it, own it

*** HOW TO UPDATE

    - *git pull*

    - *M-x package-list-packages* => *U* => *x*

*** BINDS

    - Default emacs binds (unless you enable evil)

    - Principally, we want to use short M-x aliases, while also putting global function binds on C-c and
      language specific binds on M-m prefixes

    - Do look at [[https://github.com/grandfoobah/spartan-emacs/blob/master/spartan-layers/spartan-binds-global.el][spartan-binds-global.el]] to get
      the general idea,

      M-x ff (find files) ,
      M-x rg (rgrep files) ,
      M-x kr (browse-kill-ring) ,
      M-x ed (ediff) ,
      M-x git (magit) ,
      M-x lint (flymake) ,
      M-x pb (webpaste) ,
      M-x sh (better-shell) ,
      <f5> (compile) ,
      <f6> (script execute) ...

    - Also see [[https://github.com/grandfoobah/spartan-emacs/blob/master/spartan-layers/spartan-eglot.el][spartan-eglot.el]] for language-server-protocol binds

    - And for language-specific files, see relevant language file e.g. [[https://github.com/grandfoobah/spartan-emacs/blob/master/spartan-layers/spartan-python.el][spartan-python.el]]
